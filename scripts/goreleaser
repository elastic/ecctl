#!/usr/bin/env bash
set -e

# cd into project root
cd "$(dirname "$0")"/..

OWNER_VAR_CANNOT_BE_EMPTY="OWNER environment variable must be populated"
REPO_VAR_CANNOT_BE_EMPTY="REPO environment variable must be populated"
GITHUB_TOKEN_VAR_CANNOT_BE_EMPTY="GITHUB_TOKEN environment variable must be populated"
VERSION_VAR_CANNOT_BE_EMPTY="VERSION environment variable must be populated"
BUILT_VAR_CANNOT_BE_EMPTY="BUILT environment variable must be populated"
ERROR=false

if [[ -z ${OWNER} ]]; then echo "${OWNER_VAR_CANNOT_BE_EMPTY}"; ERROR=true; fi
if [[ -z ${REPO} ]]; then echo "${REPO_VAR_CANNOT_BE_EMPTY}"; ERROR=true; fi
if [[ -z ${GITHUB_TOKEN} ]]; then echo "${GITHUB_TOKEN_VAR_CANNOT_BE_EMPTY}"; ERROR=true; fi
if [[ -z ${VERSION} ]]; then echo "${VERSION_VAR_CANNOT_BE_EMPTY}"; ERROR=true; fi
if [[ -z ${BUILT} ]]; then echo "${BUILT_VAR_CANNOT_BE_EMPTY}"; ERROR=true; fi

if ${ERROR}; then exit 1; fi

docker build -f ./build/Dockerfile.goreleaser -t ecctl:goreleaser .

docker run --rm -ti --privileged \
    -e OWNER="${OWNER}" -e REPO="${REPO}" -e GO111MODULE=on \
    -e GITHUB_TOKEN="${GITHUB_TOKEN}" -e VERSION="${VERSION}" \
    -e BUILT="${BUILT}" -v "$GOPATH:/go" \
    -v "$(pwd):/go/src/github.com/${OWNER}/${REPO}" \
    -w "/go/src/github.com/${OWNER}/${REPO}" ecctl:goreleaser ${*}

# Upload the binaries and the checksums.
for f in dist/*.{tar.gz,deb,rpm,txt}; do
    aws --profile ecsecurity s3 cp --acl bucket-owner-full-control \
    ${f} s3://download.elasticsearch.org/downloads/ecctl/${VERSION}/
done

#Â Create the actual Github Release.
hub release create -F notes/${VERSION}.md -m ${VERSION}

echo "-> Please update the brew formula https://github.com/elastic/homebrew-ecctl with the new version and checksums"